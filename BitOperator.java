public class BitOperator{
	public static void main(String[] args) {
//		//推導過程
//		先得到2的源碼2->00000000 00000000 00000000 00000010
//		2的補碼->00000000 00000000 00000000 00000010 正數3碼相同
//		3的源碼->00000000 00000000 00000000 00000011 
//		3的補碼->00000000 00000000 00000000 00000011 正數3碼相同
//		3按位&  
//		00000000 00000000 00000000 00000010 
//		00000000 00000000 00000000 00000011
//		00000000 00000000 00000000 00000010 &運算后的補碼
//		運算后的源碼 00000000 00000000 00000000 00000010
//		結果 2
		System.out.println(2&3);
		
		
//		//推導過程
//		先得到-2的源碼 10000000 00000000 00000000 00000010
//		-2的反碼->11111111 11111111 11111111 11111101 
//		-2的補碼->11111111 11111111 11111111 11111110 反碼+1
//		~2操作 00000000 00000000 00000000 00000001  運算后的補碼
//		 00000000 00000000 00000000 00000001  源碼
//		結果 1
		System.out.println(~-2);
		
		
//		推導
//		1得到2的補碼 00000000 00000000 00000000 00000010
//		2~2操作    11111111 11111111 11111111 11111101  運算后的補碼
//		3運算后的反碼 11111111 11111111 11111111 11111100
//		3運算后的原碼 10000000 00000000 00000000 00000011
//		4結果 -3
		System.out.println(~2);
	}
}